//License: https://github.com/TWal/rubik.js/blob/master/LICENSE

Rubikjs.Render.Canvas.Renderer=function(c){Rubikjs.Render.Renderer.call(this,c);if(void 0!=("canvas"==c.localName?c:void 0))try{if(this.ctx=c.getContext("2d"),void 0==this.ctx){Rubikjs.Core.Logger.log("Canvas Renderer","No canvas :(","error");return}}catch(a){Rubikjs.Core.Logger.log("Canvas Renderer","Exception caught: "+a.message,"error");return}this.triangles=[]};Rubikjs.Render.Canvas.Renderer.prototype=new Rubikjs.Render.Renderer;Rubikjs.Render.Canvas.Renderer.prototype.constructor=Rubikjs.Render.Canvas.Renderer;
Rubikjs.Render.Canvas.Renderer.prototype.startFrame=function(){this.triangles=[]};
Rubikjs.Render.Canvas.Renderer.prototype.render=function(c){var a=mat4.create();mat4.multiply(a,this.perspectiveMat,c.transform);for(var d=[],b=0;b<c.vertexBuffer.data.length;b+=3){var e=vec4.create();vec4.transformMat4(e,[c.vertexBuffer.data[b],c.vertexBuffer.data[b+1],c.vertexBuffer.data[b+2],1],a);e[0]=-e[0];var f=1/e[3];e[0]*=f;e[1]*=f;e[2]*=f;e[3]=1;d.push(e)}for(b=0;b<c.indexBuffer.data.length;b+=3)if(a=d[c.indexBuffer.data[b]],e=d[c.indexBuffer.data[b+1]],f=d[c.indexBuffer.data[b+2]],0>vec3.cross([],
vec3.subtract([],e,a),vec3.subtract([],f,a))[2]&&1>a[2]&&1>e[2]&&1>f[2]){var g=4*c.indexBuffer.data[b],a={pt0:a,pt1:e,pt2:f,color:[255*c.colorBuffer.data[g]+0.5|0,255*c.colorBuffer.data[g+1]+0.5|0,255*c.colorBuffer.data[g+2]+0.5|0,255*c.colorBuffer.data[g+3]+0.5|0],zmean:0};a.zmean=(a.pt0[2]+a.pt1[2]+a.pt2[2])/3;this.triangles.push(a)}c=0.5*this.element.offsetWidth;a=0.5*this.element.offsetHeight;for(b=0;b<d.length;++b)d[b][0]=(1-d[b][0])*c+0.5|0,d[b][1]=(1-d[b][1])*a+0.5|0};
Rubikjs.Render.Canvas.Renderer.prototype.endFrame=function(){this.triangles.sort(function(a,b){return b.zmean-a.zmean});this.ctx.clearRect(0,0,this.element.offsetWidth,this.element.offsetHeight);var c="",a=this;this.triangles.forEach(function(d){var b="rgba("+d.color[0]+", "+d.color[1]+", "+d.color[2]+", "+d.color[3]+")";b!=c&&(a.ctx.fillStyle=b,c=a.ctx.strokeStyle=b);a.ctx.beginPath();a.ctx.moveTo(d.pt0[0],d.pt0[1]);a.ctx.lineTo(d.pt1[0],d.pt1[1]);a.ctx.lineTo(d.pt2[0],d.pt2[1]);a.ctx.closePath();
a.ctx.fill();a.ctx.stroke()})};Rubikjs.Render.Canvas.Renderer.prototype.createMesh=function(){return new Rubikjs.Render.Mesh};
