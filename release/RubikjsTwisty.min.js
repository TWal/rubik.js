//License: https://github.com/TWal/rubik.js/blob/master/LICENSE

Rubikjs.Twisty.FixedPiecePlace=function(){this.pieces={};this.groups={};this.turnDegree=90;this.turnTime=0.5;this.stepNumber=10;this.instructionQueue=[];this.isProcessingQueue=!1;this.rendermgr=null};Rubikjs.Twisty.FixedPiecePlace.prototype.endInit=function(){var b=this,c;for(c in this.groups)this.groups[c]instanceof Rubikjs.Twisty.FixedPiecePlace.Group&&(this.groups[c].pieces=this.groups[c].pieces.map(function(c){return c.map(function(a){return b.pieces[a]})}));this.rendermgr.render()};
Rubikjs.Twisty.FixedPiecePlace.prototype.sendInstruction=function(b){this.instructionQueue.push(b);this.processQueue()};Rubikjs.Twisty.FixedPiecePlace.prototype.sendMultipleInstructions=function(b){this.instructionQueue=this.instructionQueue.concat(b);this.processQueue()};Rubikjs.Twisty.FixedPiecePlace.prototype.stop=function(){this.instructionQueue=[]};
Rubikjs.Twisty.FixedPiecePlace.prototype.processQueue=function(){if(!this.isProcessingQueue)if(0==this.instructionQueue.length)this.isProcessingQueue=!1;else{this.isProcessingQueue=!0;var b=this.instructionQueue[0],c=this,d=function(){c.instructionQueue.shift();c.isProcessingQueue=!1;c.processQueue()};b instanceof Rubikjs.Notation.Move?this.multipleMove(this.stepNumber,[b.group.getTurnFunction(b.count,this.stepNumber)],d):b instanceof Rubikjs.Notation.MultiMove?this.multipleMove(this.stepNumber,b.moves.map(function(a){return a.group.getTurnFunction(a.count*
b.count,this.stepNumber)},this),d):d()}};Rubikjs.Twisty.FixedPiecePlace.prototype.multipleMove=function(b,c,d){var a=0,e=this,g=function(){if(a<b){if(1==c.length)c[0].turnFunction();else{for(var f=c.length;f--;)c[f].nbTurnFunction(-a);for(f=0;f<c.length;++f)c[f].nbTurnFunction(a+1)}a+=1;setTimeout(g,1E3*(e.turnTime/b));e.rendermgr.render()}else c.forEach(function(a){a.endFunction()}),d()};g()};
Rubikjs.Twisty.FixedPiecePlace.Group=function(b){this.twisty=b;this.pieces=[];this.rotationAxis=[0,1,0];this.rotationCenter=[0,0,0]};Rubikjs.Twisty.FixedPiecePlace.Group.prototype.cycle=function(b){for(var c=0;c<this.pieces.length;++c)for(var d=this.pieces[c].map(function(a){return a.movable}),a=this.pieces[c].length,e=b%a+a,g=0;g<a;++g)this.pieces[c][g].movable=d[(g+e)%a]};
Rubikjs.Twisty.FixedPiecePlace.Group.prototype.getTurnFunction=function(b,c){b=-b;var d=this.twisty.turnDegree*Math.PI/180*b/c,a=this,e=mat4.create();mat4.rotate(e,e,d,a.rotationAxis);return{turnFunction:function(){a.pieces.forEach(function(a){a.forEach(function(a){mat4.multiply(a.movable.mesh.transform,e,a.movable.mesh.transform)})})},nbTurnFunction:function(c){var b=mat4.create();mat4.rotate(b,b,c*d,a.rotationAxis);a.pieces.forEach(function(a){a.forEach(function(a){mat4.multiply(a.movable.mesh.transform,
b,a.movable.mesh.transform)})})},endFunction:function(){a.cycle(b)}}};Rubikjs.Twisty.FixedPiecePlace.FullRotation=function(b){this.twisty=b;this.groups=[];this.rotationAxis=[0,1,0];this.rotationCenter=[0,0,0]};
Rubikjs.Twisty.FixedPiecePlace.FullRotation.prototype.cycle=function(b){for(var c=0;c<this.groups.length;++c){var d={},a;for(a in this.twisty.groups)this.twisty.groups.hasOwnProperty(a)&&(d[a]=this.twisty.groups[a].pieces);for(var e=this.groups[c].length,g=b%e+e,f=0;f<e;++f)this.twisty.groups[this.groups[c][f]].pieces=d[this.groups[c][(f+g)%e]]}};
Rubikjs.Twisty.FixedPiecePlace.FullRotation.prototype.getTurnFunction=function(b,c){b=-b;var d=this.twisty.turnDegree*Math.PI/180*b/c,a=this,e=mat4.create();mat4.rotate(e,e,d,a.rotationAxis);return{turnFunction:function(){for(var b in a.twisty.pieces)mat4.multiply(a.twisty.pieces[b].movable.mesh.transform,e,a.twisty.pieces[b].movable.mesh.transform)},nbTurnFunction:function(b){var c=mat4.create();mat4.rotate(c,c,b*d,a.rotationAxis);for(var e in a.twisty.pieces)mat4.multiply(a.twisty.pieces[e].movable.mesh.transform,
c,a.twisty.pieces[e].movable.mesh.transform)},endFunction:function(){a.cycle(b)}}};Rubikjs.Twisty.FixedPiecePlace.Combined=function(b,c){this.twisty=b;this.groups=c};
Rubikjs.Twisty.FixedPiecePlace.Combined.prototype.getTurnFunction=function(b,c){for(var d=[],a=0;a<this.groups.length;++a)d.push(this.twisty.groups[this.groups[a][0]].getTurnFunction(b*this.groups[a][1],c));return{turnFunction:function(){for(var a=0;a<d.length;++a)d[a].turnFunction()},nbTurnFunction:function(a){for(var b=0;b<d.length;++b)d[b].nbTurnFunction(a)},endFunction:function(){for(var a=0;a<d.length;++a)d[a].endFunction()}}};
