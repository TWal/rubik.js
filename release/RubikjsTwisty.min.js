//License: https://github.com/TWal/rubik.js/blob/master/LICENSE

Rubikjs.Twisty.FixedPiecePlace=function(){this.pieces={};this.groups={};this.turnDegree=90;this.turnTime=0.5;this.stepNumber=10;this.instructionQueue=[];this.isProcessingQueue=!1;this.rendermgr=null};Rubikjs.Twisty.FixedPiecePlace.prototype.endInit=function(){var a=this,b;for(b in this.groups)this.groups[b]instanceof Rubikjs.Twisty.FixedPiecePlace.Group&&(this.groups[b].pieces=this.groups[b].pieces.map(function(b){return b.map(function(b){return a.pieces[b]})}));this.rendermgr.render()};
Rubikjs.Twisty.FixedPiecePlace.prototype.sendInstruction=function(a){this.instructionQueue.push(a);this.processQueue()};Rubikjs.Twisty.FixedPiecePlace.prototype.sendMultipleInstructions=function(a){this.instructionQueue=this.instructionQueue.concat(a);this.processQueue()};Rubikjs.Twisty.FixedPiecePlace.prototype.stop=function(){this.instructionQueue=[]};
Rubikjs.Twisty.FixedPiecePlace.prototype.processQueue=function(){if(!this.isProcessingQueue)if(0==this.instructionQueue.length)this.isProcessingQueue=!1;else{this.isProcessingQueue=!0;var a=this.instructionQueue[0],b=this,d=function(){b.instructionQueue.shift();b.isProcessingQueue=!1;b.processQueue()};a instanceof Rubikjs.Notation.Move?this.multipleMove(this.stepNumber,[a.group.getTurnFunction(a.count,this.stepNumber)],d):a instanceof Rubikjs.Notation.MultiMove?this.multipleMove(this.stepNumber,a.moves.map(function(b){return b.group.getTurnFunction(b.count*
a.count,this.stepNumber)},this),d):d()}};Rubikjs.Twisty.FixedPiecePlace.prototype.multipleMove=function(a,b,d){var c=0,e=this,g=function(){if(c<a){if(1==b.length)b[0].turnFunction();else{for(var f=b.length;f--;)b[f].nbTurnFunction(-c);for(f=0;f<b.length;++f)b[f].nbTurnFunction(c+1)}c+=1;setTimeout(g,1E3*(e.turnTime/a));e.rendermgr.render()}else b.forEach(function(a){a.endFunction()}),d()};g()};Rubikjs.Twisty.FixedPiecePlace.Piece=function(a){this.movable={mesh:a}};
Rubikjs.Twisty.FixedPiecePlace.Group=function(a){this.twisty=a;this.pieces=[];this.rotationAxis=[0,1,0];this.rotationCenter=[0,0,0]};Rubikjs.Twisty.FixedPiecePlace.Group.prototype.cycle=function(a){for(var b=0;b<this.pieces.length;++b)for(var d=this.pieces[b].map(function(a){return a.movable}),c=this.pieces[b].length,e=a%c+c,g=0;g<c;++g)this.pieces[b][g].movable=d[(g+e)%c]};
Rubikjs.Twisty.FixedPiecePlace.Group.prototype.getTurnFunction=function(a,b){a=-a;var d=this.twisty.turnDegree*Math.PI/180*a/b,c=this,e=mat4.create();mat4.rotate(e,e,d,c.rotationAxis);return{turnFunction:function(){c.pieces.forEach(function(a){a.forEach(function(a){mat4.multiply(a.movable.mesh.transform,e,a.movable.mesh.transform)})})},nbTurnFunction:function(a){var b=mat4.create();mat4.rotate(b,b,a*d,c.rotationAxis);c.pieces.forEach(function(a){a.forEach(function(a){mat4.multiply(a.movable.mesh.transform,
b,a.movable.mesh.transform)})})},endFunction:function(){c.cycle(a)}}};Rubikjs.Twisty.FixedPiecePlace.FullRotation=function(a){this.twisty=a;this.groups=[];this.rotationAxis=[0,1,0];this.rotationCenter=[0,0,0]};
Rubikjs.Twisty.FixedPiecePlace.FullRotation.prototype.cycle=function(a){for(var b=0;b<this.groups.length;++b){var d={},c;for(c in this.twisty.groups)this.twisty.groups.hasOwnProperty(c)&&(d[c]=this.twisty.groups[c].pieces);for(var e=this.groups[b].length,g=a%e+e,f=0;f<e;++f)this.twisty.groups[this.groups[b][f]].pieces=d[this.groups[b][(f+g)%e]]}};
Rubikjs.Twisty.FixedPiecePlace.FullRotation.prototype.getTurnFunction=function(a,b){a=-a;var d=this.twisty.turnDegree*Math.PI/180*a/b,c=this,e=mat4.create();mat4.rotate(e,e,d,c.rotationAxis);return{turnFunction:function(){for(var a in c.twisty.pieces)mat4.multiply(c.twisty.pieces[a].movable.mesh.transform,e,c.twisty.pieces[a].movable.mesh.transform)},nbTurnFunction:function(a){var b=mat4.create();mat4.rotate(b,b,a*d,c.rotationAxis);for(var e in c.twisty.pieces)mat4.multiply(c.twisty.pieces[e].movable.mesh.transform,
b,c.twisty.pieces[e].movable.mesh.transform)},endFunction:function(){c.cycle(a)}}};Rubikjs.Twisty.FixedPiecePlace.Combined=function(a,b){this.twisty=a;this.groups=b};
Rubikjs.Twisty.FixedPiecePlace.Combined.prototype.getTurnFunction=function(a,b){for(var d=[],c=0;c<this.groups.length;++c)d.push(this.twisty.groups[this.groups[c][0]].getTurnFunction(a*this.groups[c][1],b));return{turnFunction:function(){for(var a=0;a<d.length;++a)d[a].turnFunction()},nbTurnFunction:function(a){for(var b=0;b<d.length;++b)d[b].nbTurnFunction(a)},endFunction:function(){for(var a=0;a<d.length;++a)d[a].endFunction()}}};
Rubikjs.Twisty.FixedPiecePlace.DefaultNotation=function(a){this.twisty=a};Rubikjs.Twisty.FixedPiecePlace.DefaultNotation.prototype=new Rubikjs.Notation.Parser;Rubikjs.Twisty.FixedPiecePlace.DefaultNotation.prototype.constructor=new Rubikjs.Twisty.FixedPiecePlace.DefaultNotation;
Rubikjs.Twisty.FixedPiecePlace.DefaultNotation.prototype.parseToken=function(a){var b=this.groupNameLength(a),d=a.substr(0,b);a=this.getCount(a.substr(b));if(void 0!=this.twisty.groups[d])return new Rubikjs.Notation.Move(this.twisty.groups[d],a);Rubikjs.Core.Logger.log("Twisty","Undefined group name: '"+d+"'","warn");return new Rubikjs.Notation.Instruction};
