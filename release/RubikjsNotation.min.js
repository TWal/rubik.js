//License: https://github.com/TWal/rubik.js/blob/master/LICENSE

Rubikjs.Notation.Instruction=function(){};Rubikjs.Notation.Instruction.prototype.copy=function(){return new Rubikjs.Notation.Instruction};Rubikjs.Notation.Move=function(a,b){this.group=a;this.count=b};Rubikjs.Notation.Move.prototype=new Rubikjs.Notation.Instruction;Rubikjs.Notation.Move.prototype.constructor=new Rubikjs.Notation.Move;Rubikjs.Notation.Move.prototype.copy=function(){return new Rubikjs.Notation.Move(this.group,this.count)};
Rubikjs.Notation.MultiMove=function(a,b){this.moves=a;this.count=b};Rubikjs.Notation.MultiMove.prototype=new Rubikjs.Notation.Instruction;Rubikjs.Notation.MultiMove.prototype.constructor=new Rubikjs.Notation.MultiMove;Rubikjs.Notation.MultiMove.prototype.copy=function(){for(var a=[],b=0;b<this.moves.length;++b)a.push(this.moves[b].copy());return new Rubikjs.Notation.MultiMove(a,this.count)};
Rubikjs.Notation.Parser=function(){this.separator=" ";this.handleCommutators=this.handleCombined=this.handleParenthesis=!0};
Rubikjs.Notation.Parser.prototype.parse=function(a){var b=this.roughSplit(a);if(b[0]==a){if("("==a[0])return b=a.lastIndexOf(")"),this.multiplyInstuctions(this.parse(a.substring(1,b)),this.getCount(a.substring(b+1)));if("{"==a[0])return b=a.lastIndexOf("}"),[this.combineInstructions(this.parse(a.substring(1,b)),this.getCount(a.substring(b+1)))];if("["==a[0]){var b=a.lastIndexOf("]"),c=this.findMatching(a,"[","]",","),d=this.findMatching(a,"[","]",":");return-1!=c?this.multiplyInstuctions(this.commutateInstructions(this.parse(a.substring(1,
c)),this.parse(a.substring(c+1,b))),this.getCount(a.substring(b+1))):-1!=d?this.multiplyInstuctions(this.conjugateInstructions(this.parse(a.substring(1,d)),this.parse(a.substring(d+1,b))),this.getCount(a.substring(b+1))):[]}return this.simpleParse(b[0])}return b.map(this.parse,this).reduce(function(a,b){return a.concat(b)})};Rubikjs.Notation.Parser.prototype.simpleParse=function(a){a=a.split(this.separator);for(var b=[],c=0;c<a.length;++c)""!=a[c]&&b.push(this.parseToken(a[c]));return b};
Rubikjs.Notation.Parser.prototype.roughSplit=function(a){if(""==a||this.handleParenthesis&&!this.occurencesEqual(a,"(",")")||this.handleCombined&&!this.occurencesEqual(a,"{","}")||this.handleCommutators&&!this.occurencesEqual(a,"[","]"))return[];if(this.handleParenthesis&&"("==a[0]){var b=this.findMatching(a,"(",")"),b=a.indexOf(this.separator,b),b=-1!=b?b:a.length;return[a.substring(0,b)].concat(this.roughSplit(a.substring(b)))}if(this.handleCombined&&"{"==a[0])return b=this.findMatching(a,"{","}"),
b=a.indexOf(this.separator,b),b=-1!=b?b:a.length,[a.substring(0,b)].concat(this.roughSplit(a.substring(b)));if(this.handleCommutators&&"["==a[0])return b=this.findMatching(a,"[","]"),b=a.indexOf(this.separator,b),b=-1!=b?b:a.length,[a.substring(0,b)].concat(this.roughSplit(a.substring(b)));b=a.length;if(this.handleParenthesis){var c=a.indexOf("(");-1!=c&&c<b&&(b=c)}this.handleCombined&&(c=a.indexOf("{"),-1!=c&&c<b&&(b=c));this.handleCommutators&&(c=a.indexOf("["),-1!=c&&c<b&&(b=c));return[a.substring(0,
b)].concat(this.roughSplit(a.substring(b)))};Rubikjs.Notation.Parser.prototype.findMatching=function(a,b,c,d){d=d||c;for(var e=0,f=1;;){++e;if(1==f&&a[e]==d)return e;a[e]==b?f+=1:a[e]==c&&(f-=1);if(e>=a.length)return-1}};Rubikjs.Notation.Parser.prototype.occurencesEqual=function(a,b,c){for(var d=0,e=0,f=0;f<a.length;++f)a[f]==b?++d:a[f]==c&&++e;return d==e};
Rubikjs.Notation.Parser.prototype.multiplyInstuctions=function(a,b){if(0>b){a.reverse();for(var c=0;c<a.length;++c)a[c].count=-a[c].count;b=-b}for(var d=[],c=0;c<b;++c)d=d.concat(a);return d};Rubikjs.Notation.Parser.prototype.combineInstructions=function(a,b){return new Rubikjs.Notation.MultiMove(a,b)};
Rubikjs.Notation.Parser.prototype.commutateInstructions=function(a,b){for(var c=a.concat(b),d=a.length;d--;){var e=a[d].copy();e.count=-e.count;c.push(e)}for(d=b.length;d--;)e=b[d].copy(),e.count=-e.count,c.push(e);return c};Rubikjs.Notation.Parser.prototype.conjugateInstructions=function(a,b){for(var c=a.concat(b),d=a.length;d--;){var e=a[d].copy();e.count=-e.count;c.push(e)}return c};
Rubikjs.Notation.Parser.prototype.getCount=function(a){if(""==a)return 1;if("'"==a)return-1;var b=parseInt(a);return"'"==a[a.length-1]?-b:b};Rubikjs.Notation.Parser.prototype.parseToken=function(a){return new Rubikjs.Notation.Instruction};
