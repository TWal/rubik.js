//License: https://github.com/TWal/rubik.js/blob/master/LICENSE

Rubikjs.Notation.Instruction=function(){};Rubikjs.Notation.Move=function(a,b){this.group=a;this.count=b};Rubikjs.Notation.Move.prototype=new Rubikjs.Notation.Instruction;Rubikjs.Notation.Move.prototype.constructor=new Rubikjs.Notation.Move;Rubikjs.Notation.MultiMove=function(a){this.moves=a};Rubikjs.Notation.MultiMove.prototype=new Rubikjs.Notation.Instruction;Rubikjs.Notation.MultiMove.prototype.constructor=new Rubikjs.Notation.MultiMove;
Rubikjs.Notation.Parser=function(){this.separator=" ";this.handleCombined=this.handleParenthesis=!0};Rubikjs.Notation.Parser.prototype.parse=function(a){var b=this.roughSplit(a);return b[0]==a?"("==a[0]?(b=a.lastIndexOf(")"),this.multiplyInstuctions(this.parse(a.substring(1,b)),this.getCount(a.substring(b+1)))):"{"==a[0]?(b=a.lastIndexOf("}"),this.combineInstructions(this.parse(a.substring(1,b)),this.getCount(a.substring(b+1)))):this.simpleParse(b[0]):b.map(this.parse,this).reduce(function(a,b){return a.concat(b)})};
Rubikjs.Notation.Parser.prototype.simpleParse=function(a){a=a.split(this.separator);for(var b=[],c=0;c<a.length;++c)""!=a[c]&&b.push(this.parseToken(a[c]));return b};
Rubikjs.Notation.Parser.prototype.roughSplit=function(a){if(""==a)return[];if(this.handleParenthesis&&"("==a[0]){var b=this.findMatching(a,"(",")"),b=a.indexOf(this.separator,b),b=-1!=b?b:a.length;return[a.substring(0,b)].concat(this.roughSplit(a.substring(b)))}if(this.handleCombined&&"{"==a[0])return b=this.findMatching(a,"{","}"),b=a.indexOf(this.separator,b),b=-1!=b?b:a.length,[a.substring(0,b)].concat(this.roughSplit(a.substring(b)));b=a.length;if(this.handleParenthesis){var c=a.indexOf("(");
-1!=c&&c<b&&(b=c)}this.handleCombined&&(c=a.indexOf("{"),-1!=c&&c<b&&(b=c));return[a.substring(0,b)].concat(this.roughSplit(a.substring(b)))};Rubikjs.Notation.Parser.prototype.findMatching=function(a,b,c){for(var d=0,e=1;0!=e;)++d,a[d]==b?e+=1:a[d]==c&&(e-=1);return d};Rubikjs.Notation.Parser.prototype.multiplyInstuctions=function(a,b){if(0>b){a.reverse();for(var c=0;c<a.length;++c)a[c].count=-a[c].count;b=-b}for(var d=[],c=0;c<b;++c)d=d.concat(a);return d};
Rubikjs.Notation.Parser.prototype.combineInstructions=function(a,b){for(var c=0;c<a.length;++c)a[c].count*=b;return new Rubikjs.Notation.MultiMove(a)};Rubikjs.Notation.Parser.prototype.getCount=function(a){if(""==a)return 1;if("'"==a)return-1;var b=parseInt(a);return"'"==a[a.length-1]?-b:b};Rubikjs.Notation.Parser.prototype.parseToken=function(a){return new Rubikjs.Notation.Instruction};
